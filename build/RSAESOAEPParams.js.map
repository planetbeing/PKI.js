{"version":3,"sources":["../src/RSAESOAEPParams.js"],"names":["asn1js","RSAESOAEPParams","constructor","parameters","hashAlgorithm","defaultValues","maskGenAlgorithm","pSourceAlgorithm","fromSchema","schema","memberName","AlgorithmIdentifier","algorithmId","algorithmParams","Null","toSchema","OctetString","valueHex","Uint8Array","buffer","Error","names","Sequence","name","blockName","value","Constructed","idBlock","tagClass","tagNumber","optional","asn1","compareSchema","verified","result","outputArray","isEqual","push","toJSON","object"],"mappings":"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","file":"RSAESOAEPParams.js","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\nimport AlgorithmIdentifier from \"./AlgorithmIdentifier.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC3447\r\n */\r\nexport default class RSAESOAEPParams\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for RSAESOAEPParams class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {AlgorithmIdentifier}\r\n\t\t * @desc hashAlgorithm\r\n\t\t */\r\n\t\tthis.hashAlgorithm = getParametersValue(parameters, \"hashAlgorithm\", RSAESOAEPParams.defaultValues(\"hashAlgorithm\"));\r\n\t\t/**\r\n\t\t * @type {AlgorithmIdentifier}\r\n\t\t * @desc maskGenAlgorithm\r\n\t\t */\r\n\t\tthis.maskGenAlgorithm = getParametersValue(parameters, \"maskGenAlgorithm\", RSAESOAEPParams.defaultValues(\"maskGenAlgorithm\"));\r\n\t\t/**\r\n\t\t * @type {AlgorithmIdentifier}\r\n\t\t * @desc pSourceAlgorithm\r\n\t\t */\r\n\t\tthis.pSourceAlgorithm = getParametersValue(parameters, \"pSourceAlgorithm\", RSAESOAEPParams.defaultValues(\"pSourceAlgorithm\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"hashAlgorithm\":\r\n\t\t\t\treturn new AlgorithmIdentifier({\r\n\t\t\t\t\talgorithmId: \"1.3.14.3.2.26\", // SHA-1\r\n\t\t\t\t\talgorithmParams: new asn1js.Null()\r\n\t\t\t\t});\r\n\t\t\tcase \"maskGenAlgorithm\":\r\n\t\t\t\treturn new AlgorithmIdentifier({\r\n\t\t\t\t\talgorithmId: \"1.2.840.113549.1.1.8\", // MGF1\r\n\t\t\t\t\talgorithmParams: (new AlgorithmIdentifier({\r\n\t\t\t\t\t\talgorithmId: \"1.3.14.3.2.26\", // SHA-1\r\n\t\t\t\t\t\talgorithmParams: new asn1js.Null()\r\n\t\t\t\t\t})).toSchema()\r\n\t\t\t\t});\r\n\t\t\tcase \"pSourceAlgorithm\":\r\n\t\t\t\treturn new AlgorithmIdentifier({\r\n\t\t\t\t\talgorithmId: \"1.2.840.113549.1.1.9\", // id-pSpecified\r\n\t\t\t\t\talgorithmParams: new asn1js.OctetString({ valueHex: (new Uint8Array([0xda, 0x39, 0xa3, 0xee, 0x5e, 0x6b, 0x4b, 0x0d, 0x32, 0x55, 0xbf, 0xef, 0x95, 0x60, 0x18, 0x90, 0xaf, 0xd8, 0x07, 0x09])).buffer }) // SHA-1 hash of empty string\r\n\t\t\t\t});\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for RSAESOAEPParams class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * RSAES-OAEP-params ::= SEQUENCE {\r\n\t *    hashAlgorithm     [0] HashAlgorithm    DEFAULT sha1,\r\n\t *    maskGenAlgorithm  [1] MaskGenAlgorithm DEFAULT mgf1SHA1,\r\n\t *    pSourceAlgorithm  [2] PSourceAlgorithm DEFAULT pSpecifiedEmpty\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [hashAlgorithm]\r\n\t\t * @property {string} [maskGenAlgorithm]\r\n\t\t * @property {string} [pSourceAlgorithm]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tvalue: [AlgorithmIdentifier.schema(names.hashAlgorithm || {})]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t},\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tvalue: [AlgorithmIdentifier.schema(names.maskGenAlgorithm || {})]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t\t},\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tvalue: [AlgorithmIdentifier.schema(names.pSourceAlgorithm || {})]\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"hashAlgorithm\",\r\n\t\t\t\"maskGenAlgorithm\",\r\n\t\t\t\"pSourceAlgorithm\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tRSAESOAEPParams.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\thashAlgorithm: {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"hashAlgorithm\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tmaskGenAlgorithm: {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"maskGenAlgorithm\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tpSourceAlgorithm: {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"pSourceAlgorithm\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for RSAESOAEPParams\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tif(\"hashAlgorithm\" in asn1.result)\r\n\t\t\tthis.hashAlgorithm = new AlgorithmIdentifier({ schema: asn1.result.hashAlgorithm });\r\n\r\n\t\tif(\"maskGenAlgorithm\" in asn1.result)\r\n\t\t\tthis.maskGenAlgorithm = new AlgorithmIdentifier({ schema: asn1.result.maskGenAlgorithm });\r\n\r\n\t\tif(\"pSourceAlgorithm\" in asn1.result)\r\n\t\t\tthis.pSourceAlgorithm = new AlgorithmIdentifier({ schema: asn1.result.pSourceAlgorithm });\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create array for output sequence\r\n\t\tconst outputArray = [];\r\n\t\t\r\n\t\tif(!this.hashAlgorithm.isEqual(RSAESOAEPParams.defaultValues(\"hashAlgorithm\")))\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [this.hashAlgorithm.toSchema()]\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\tif(!this.maskGenAlgorithm.isEqual(RSAESOAEPParams.defaultValues(\"maskGenAlgorithm\")))\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [this.maskGenAlgorithm.toSchema()]\r\n\t\t\t}));\r\n\t\t}\r\n\r\n\t\tif(!this.pSourceAlgorithm.isEqual(RSAESOAEPParams.defaultValues(\"pSourceAlgorithm\")))\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [this.pSourceAlgorithm.toSchema()]\r\n\t\t\t}));\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst object = {};\r\n\r\n\t\tif(!this.hashAlgorithm.isEqual(RSAESOAEPParams.defaultValues(\"hashAlgorithm\")))\r\n\t\t\tobject.hashAlgorithm = this.hashAlgorithm.toJSON();\r\n\r\n\t\tif(!this.maskGenAlgorithm.isEqual(RSAESOAEPParams.defaultValues(\"maskGenAlgorithm\")))\r\n\t\t\tobject.maskGenAlgorithm = this.maskGenAlgorithm.toJSON();\r\n\r\n\t\tif(!this.pSourceAlgorithm.isEqual(RSAESOAEPParams.defaultValues(\"pSourceAlgorithm\")))\r\n\t\t\tobject.pSourceAlgorithm = this.pSourceAlgorithm.toJSON();\r\n\r\n\t\treturn object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"]}