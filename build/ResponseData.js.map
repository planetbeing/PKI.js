{"version":3,"sources":["../src/ResponseData.js"],"names":["asn1js","ResponseData","constructor","parameters","tbs","defaultValues","responderID","producedAt","responses","responseExtensions","fromSchema","schema","memberName","ArrayBuffer","Date","Error","compareWithDefault","memberValue","byteLength","Object","keys","length","names","Sequence","name","blockName","value","Constructed","optional","idBlock","tagClass","tagNumber","Integer","version","Choice","RelativeDistinguishedNames","ResponseDataByName","OctetString","ResponseDataByKey","GeneralizedTime","Repeated","SingleResponse","response","Extensions","extensions","asn1","compareSchema","verified","result","valueBeforeDecode","valueBlock","valueDec","toDate","Array","from","element","Extension","toSchema","encodeFlag","tbsSchema","fromBER","outputArray","push","valueDate","toJSON","_object"],"mappings":"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","file":"ResponseData.js","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\nimport RelativeDistinguishedNames from \"./RelativeDistinguishedNames.js\";\r\nimport SingleResponse from \"./SingleResponse.js\";\r\nimport Extension from \"./Extension.js\";\r\nimport Extensions from \"./Extensions.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC6960\r\n */\r\nexport default class ResponseData\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for ResponseData class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {ArrayBuffer}\r\n\t\t * @desc tbs\r\n\t\t */\r\n\t\tthis.tbs = getParametersValue(parameters, \"tbs\", ResponseData.defaultValues(\"tbs\"));\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @desc responderID\r\n\t\t */\r\n\t\tthis.responderID = getParametersValue(parameters, \"responderID\", ResponseData.defaultValues(\"responderID\"));\r\n\t\t/**\r\n\t\t * @type {Date}\r\n\t\t * @desc producedAt\r\n\t\t */\r\n\t\tthis.producedAt = getParametersValue(parameters, \"producedAt\", ResponseData.defaultValues(\"producedAt\"));\r\n\t\t/**\r\n\t\t * @type {Array.<SingleResponse>}\r\n\t\t * @desc responses\r\n\t\t */\r\n\t\tthis.responses = getParametersValue(parameters, \"responses\", ResponseData.defaultValues(\"responses\"));\r\n\r\n\t\tif(\"responseExtensions\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {Array.<Extension>}\r\n\t\t\t * @desc responseExtensions\r\n\t\t\t */\r\n\t\t\tthis.responseExtensions = getParametersValue(parameters, \"responseExtensions\", ResponseData.defaultValues(\"responseExtensions\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"tbs\":\r\n\t\t\t\treturn new ArrayBuffer(0);\r\n\t\t\tcase \"responderID\":\r\n\t\t\t\treturn {};\r\n\t\t\tcase \"producedAt\":\r\n\t\t\t\treturn new Date(0, 0, 0);\r\n\t\t\tcase \"responses\":\r\n\t\t\tcase \"responseExtensions\":\r\n\t\t\t\treturn [];\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for ResponseData class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Compare values with default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t * @param {*} memberValue Value to compare with default value\r\n\t */\r\n\tstatic compareWithDefault(memberName, memberValue)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"tbs\":\r\n\t\t\t\treturn (memberValue.byteLength === 0);\r\n\t\t\tcase \"responderID\":\r\n\t\t\t\treturn (Object.keys(memberValue).length === 0);\r\n\t\t\tcase \"producedAt\":\r\n\t\t\t\treturn (memberValue === ResponseData.defaultValues(memberName));\r\n\t\t\tcase \"responses\":\r\n\t\t\tcase \"responseExtensions\":\r\n\t\t\t\treturn (memberValue.length === 0);\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for ResponseData class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * ResponseData ::= SEQUENCE {\r\n\t *    version              [0] EXPLICIT Version DEFAULT v1,\r\n\t *    responderID              ResponderID,\r\n\t *    producedAt               GeneralizedTime,\r\n\t *    responses                SEQUENCE OF SingleResponse,\r\n\t *    responseExtensions   [1] EXPLICIT Extensions OPTIONAL }\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [version]\r\n\t\t * @property {string} [ResponseDataByName]\r\n\t\t * @property {string} [ResponseDataByKey]\r\n\t\t * @property {string} [producedAt]\r\n\t\t * @property {string} [response]\r\n\t\t * @property {string} [extensions]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"ResponseData\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [new asn1js.Integer({ name: (names.version || \"ResponseData.version\") })]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Choice({\r\n\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\t\t\tname: (names.responderID || \"ResponseData.responderID\"),\r\n\t\t\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tvalue: [RelativeDistinguishedNames.schema(names.ResponseDataByName || {\r\n\t\t\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\t\t\tblockName: \"ResponseData.byName\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})]\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\t\t\tname: (names.responderID || \"ResponseData.responderID\"),\r\n\t\t\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tvalue: [new asn1js.OctetString({ name: (names.ResponseDataByKey || \"ResponseData.byKey\") })]\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.GeneralizedTime({ name: (names.producedAt || \"ResponseData.producedAt\") }),\r\n\t\t\t\tnew asn1js.Sequence({\r\n\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\tnew asn1js.Repeated({\r\n\t\t\t\t\t\t\tname: \"ResponseData.responses\",\r\n\t\t\t\t\t\t\tvalue: SingleResponse.schema(names.response || {})\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [Extensions.schema(names.extensions || {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"ResponseData.responseExtensions\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})]\r\n\t\t\t\t}) // EXPLICIT SEQUENCE value\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"ResponseData\",\r\n\t\t\t\"ResponseData.version\",\r\n\t\t\t\"ResponseData.responderID\",\r\n\t\t\t\"ResponseData.producedAt\",\r\n\t\t\t\"ResponseData.responses\",\r\n\t\t\t\"ResponseData.responseExtensions\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tResponseData.schema()\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for ResponseData\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.tbs = asn1.result.ResponseData.valueBeforeDecode;\r\n\r\n\t\tif(\"ResponseData.version\" in asn1.result)\r\n\t\t\tthis.version = asn1.result[\"ResponseData.version\"].valueBlock.valueDec;\r\n\r\n\t\tif(asn1.result[\"ResponseData.responderID\"].idBlock.tagNumber === 1)\r\n\t\t\tthis.responderID = new RelativeDistinguishedNames({ schema: asn1.result[\"ResponseData.responderID\"].valueBlock.value[0] });\r\n\t\telse\r\n\t\t\tthis.responderID = asn1.result[\"ResponseData.responderID\"].valueBlock.value[0]; // OCTETSTRING\r\n\r\n\t\tthis.producedAt = asn1.result[\"ResponseData.producedAt\"].toDate();\r\n\t\tthis.responses = Array.from(asn1.result[\"ResponseData.responses\"], element => new SingleResponse({ schema: element }));\r\n\r\n\t\tif(\"ResponseData.responseExtensions\" in asn1.result)\r\n\t\t\tthis.responseExtensions = Array.from(asn1.result[\"ResponseData.responseExtensions\"].valueBlock.value, element => new Extension({ schema: element }));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @param {boolean} encodeFlag If param equal to false then create TBS schema via decoding stored value. In othe case create TBS schema via assembling from TBS parts.\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema(encodeFlag = false)\r\n\t{\r\n\t\t//region Decode stored TBS value \r\n\t\tlet tbsSchema;\r\n\t\t\r\n\t\tif(encodeFlag === false)\r\n\t\t{\r\n\t\t\tif(this.tbs.length === 0) // No stored certificate TBS part\r\n\t\t\t\treturn ResponseData.schema();\r\n\t\t\t\r\n\t\t\ttbsSchema = asn1js.fromBER(this.tbs).result;\r\n\t\t}\r\n\t\t//endregion \r\n\t\t//region Create TBS schema via assembling from TBS parts\r\n\t\telse\r\n\t\t{\r\n\t\t\tconst outputArray = [];\r\n\t\t\t\r\n\t\t\tif(\"version\" in this)\r\n\t\t\t{\r\n\t\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [new asn1js.Integer({ value: this.version })]\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(this.responderID instanceof RelativeDistinguishedNames)\r\n\t\t\t{\r\n\t\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [this.responderID.toSchema()]\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [this.responderID]\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\toutputArray.push(new asn1js.GeneralizedTime({ valueDate: this.producedAt }));\r\n\r\n\t\t\toutputArray.push(new asn1js.Sequence({\r\n\t\t\t\tvalue: Array.from(this.responses, element => element.toSchema())\r\n\t\t\t}));\r\n\t\t\t\r\n\t\t\tif(\"responseExtensions\" in this)\r\n\t\t\t{\r\n\t\t\t\toutputArray.push(new asn1js.Sequence({\r\n\t\t\t\t\tvalue: Array.from(this.responseExtensions, element => element.toSchema())\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\ttbsSchema = new asn1js.Sequence({\r\n\t\t\t\tvalue: outputArray\r\n\t\t\t});\r\n\t\t}\r\n\t\t//endregion \r\n\t\t\r\n\t\t//region Construct and return new ASN.1 schema for this object \r\n\t\treturn tbsSchema;\r\n\t\t//endregion \r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst _object = {};\r\n\r\n\t\tif(\"version\" in this)\r\n\t\t\t_object.version = this.version;\r\n\r\n\t\tif(\"responderID\" in this)\r\n\t\t\t_object.responderID = this.responderID;\r\n\r\n\t\tif(\"producedAt\" in this)\r\n\t\t\t_object.producedAt = this.producedAt;\r\n\r\n\t\tif(\"responses\" in this)\r\n\t\t\t_object.responses = Array.from(this.responses, element => element.toJSON());\r\n\r\n\t\tif(\"responseExtensions\" in this)\r\n\t\t\t_object.responseExtensions = Array.from(this.responseExtensions, element => element.toJSON());\r\n\r\n\t\treturn _object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"]}