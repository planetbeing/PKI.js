{"version":3,"sources":["../src/OriginatorInfo.js"],"names":["asn1js","OriginatorInfo","constructor","parameters","certs","defaultValues","crls","fromSchema","schema","memberName","CertificateSet","RevocationInfoChoices","Error","compareWithDefault","memberValue","certificates","length","otherRevocationInfos","names","Sequence","name","blockName","value","Constructed","optional","idBlock","tagClass","tagNumber","valueBlock","asn1","compareSchema","verified","Set","result","toSchema","toJSON"],"mappings":"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","file":"OriginatorInfo.js","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\nimport CertificateSet from \"./CertificateSet.js\";\r\nimport RevocationInfoChoices from \"./RevocationInfoChoices.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5652\r\n */\r\nexport default class OriginatorInfo\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for OriginatorInfo class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {CertificateSet}\r\n\t\t * @desc certs\r\n\t\t */\r\n\t\tthis.certs = getParametersValue(parameters, \"certs\", OriginatorInfo.defaultValues(\"certs\"));\r\n\t\t/**\r\n\t\t * @type {RevocationInfoChoices}\r\n\t\t * @desc crls\r\n\t\t */\r\n\t\tthis.crls = getParametersValue(parameters, \"crls\", OriginatorInfo.defaultValues(\"crls\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"certs\":\r\n\t\t\t\treturn new CertificateSet();\r\n\t\t\tcase \"crls\":\r\n\t\t\t\treturn new RevocationInfoChoices();\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for OriginatorInfo class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Compare values with default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t * @param {*} memberValue Value to compare with default value\r\n\t */\r\n\tstatic compareWithDefault(memberName, memberValue)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"certs\":\r\n\t\t\t\treturn (memberValue.certificates.length === 0);\r\n\t\t\tcase \"crls\":\r\n\t\t\t\treturn ((memberValue.crls.length === 0) && (memberValue.otherRevocationInfos.length === 0));\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for OriginatorInfo class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * OriginatorInfo ::= SEQUENCE {\r\n\t *    certs [0] IMPLICIT CertificateSet OPTIONAL,\r\n\t *    crls [1] IMPLICIT RevocationInfoChoices OPTIONAL }\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [certs]\r\n\t\t * @property {string} [crls]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tname: (names.certs || \"\"),\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: CertificateSet.schema().valueBlock.value\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tname: (names.crls || \"\"),\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: RevocationInfoChoices.schema().valueBlock.value\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"certs\",\r\n\t\t\t\"crls\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tOriginatorInfo.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tcerts: \"certs\",\r\n\t\t\t\t\tcrls: \"crls\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for OriginatorInfo\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.certs = new CertificateSet({\r\n\t\t\tschema: new asn1js.Set({\r\n\t\t\t\tvalue: asn1.result.certs.valueBlock.value\r\n\t\t\t})\r\n\t\t});\r\n\r\n\t\tthis.crls = new RevocationInfoChoices({\r\n\t\t\tschema: new asn1js.Set({\r\n\t\t\t\tvalue: asn1.result.crls.valueBlock.value\r\n\t\t\t})\r\n\t\t});\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: this.certs.toSchema().valueBlock.value\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: this.crls.toSchema().valueBlock.value\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\treturn {\r\n\t\t\tcerts: this.certs.toJSON(),\r\n\t\t\tcrls: this.crls.toJSON()\r\n\t\t};\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"]}